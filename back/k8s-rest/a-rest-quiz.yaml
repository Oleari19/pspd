apiVersion: apps/v1
kind: Deployment
metadata: { name: rest-quiz-deployment }
spec:
  replicas: 1
  selector: { matchLabels: { app: rest-quiz } }
  template:
    metadata: { labels: { app: rest-quiz } }
    spec:
      containers:
        - name: rest-quiz
          image: rest-quiz:v1            # build da tua app Spring
          imagePullPolicy: IfNotPresent
          ports: [{ containerPort: 8089 }]
          env:
            - { name: PORT,        value: "8089" }
            - { name: PGHOST,      value: "postgres-quiz-service" }
            - { name: PGPORT,      value: "5432" }
            - { name: PGDATABASE,  value: "dbquiz" }
            - { name: PGUSER,      value: "quizuser" }
            - { name: PGPASSWORD,  value: "quizpass" }
          readinessProbe: { httpGet: { path: "/actuator/health/readiness", port: 8089 }, initialDelaySeconds: 5, periodSeconds: 5 }
          livenessProbe:  { httpGet: { path: "/actuator/health/liveness",  port: 8089 }, initialDelaySeconds: 10, periodSeconds: 10 }
---
apiVersion: v1
kind: Service
metadata: { name: rest-quiz-service }
spec:
  selector: { app: rest-quiz }
  ports: [ { protocol: TCP, port: 8089, targetPort: 8089 } ]
  type: ClusterIP
