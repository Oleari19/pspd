apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-user-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-user
  template:
    metadata:
      labels:
        app: postgres-user
    spec:
      securityContext:
        fsGroup: 999
      initContainers:
      - name: postgres-init
        image: busybox:1.36
        command: ['sh', '-c', 'chmod 700 /var/lib/postgresql/data && chown -R 999:999 /var/lib/postgresql/data']
        volumeMounts:
        - name: postgres-user-storage
          mountPath: /var/lib/postgresql/data
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5434
        args: ["-c","listen_addresses=*","-c","port=5434"]
        env:
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_DB
          value: "serverB"
        - name: PGPORT
          value: "5434"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        securityContext:
          runAsUser: 999
          runAsNonRoot: true
        volumeMounts:
        - name: postgres-user-storage
          mountPath: /var/lib/postgresql/data
        - name: user-init-sql
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
      volumes:
      - name: postgres-user-storage
        emptyDir: {}
      - name: user-init-sql
        configMap:
          name: user-sql-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-user-service
spec:
  type: NodePort
  selector:
    app: postgres-user
  ports:
  - protocol: TCP
    port: 5434
    targetPort: 5434
    nodePort: 30434
