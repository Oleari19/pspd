// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: user.proto
#ifndef GRPC_user_2eproto__INCLUDED
#define GRPC_user_2eproto__INCLUDED

#include "user.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace user {

class User final {
 public:
  static constexpr char const* service_full_name() {
    return "user.User";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::user::CreateUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>> AsyncCreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>>(AsyncCreateUsuarioRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>> PrepareAsyncCreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>>(PrepareAsyncCreateUsuarioRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::user::ScoreResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>> AsyncUpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>>(AsyncUpdateScoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>> PrepareAsyncUpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>>(PrepareAsyncUpdateScoreRaw(context, request, cq));
    }
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::user::LoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status ListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::user::ListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>> AsyncListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>>(AsyncListByScoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>> PrepareAsyncListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>>(PrepareAsyncListByScoreRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListByScore(::grpc::ClientContext* context, const ::user::ListRequest* request, ::user::ListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListByScore(::grpc::ClientContext* context, const ::user::ListRequest* request, ::user::ListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>* AsyncCreateUsuarioRaw(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::CreateUserResponse>* PrepareAsyncCreateUsuarioRaw(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>* AsyncUpdateScoreRaw(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ScoreResponse>* PrepareAsyncUpdateScoreRaw(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>* AsyncListByScoreRaw(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::user::ListResponse>* PrepareAsyncListByScoreRaw(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::user::CreateUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>> AsyncCreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>>(AsyncCreateUsuarioRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>> PrepareAsyncCreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>>(PrepareAsyncCreateUsuarioRaw(context, request, cq));
    }
    ::grpc::Status UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::user::ScoreResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>> AsyncUpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>>(AsyncUpdateScoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>> PrepareAsyncUpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>>(PrepareAsyncUpdateScoreRaw(context, request, cq));
    }
    ::grpc::Status Login(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::user::LoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status ListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::user::ListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ListResponse>> AsyncListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ListResponse>>(AsyncListByScoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ListResponse>> PrepareAsyncListByScore(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::user::ListResponse>>(PrepareAsyncListByScoreRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateUsuario(::grpc::ClientContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateScore(::grpc::ClientContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Login(::grpc::ClientContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListByScore(::grpc::ClientContext* context, const ::user::ListRequest* request, ::user::ListResponse* response, std::function<void(::grpc::Status)>) override;
      void ListByScore(::grpc::ClientContext* context, const ::user::ListRequest* request, ::user::ListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>* AsyncCreateUsuarioRaw(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::CreateUserResponse>* PrepareAsyncCreateUsuarioRaw(::grpc::ClientContext* context, const ::user::CreateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>* AsyncUpdateScoreRaw(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ScoreResponse>* PrepareAsyncUpdateScoreRaw(::grpc::ClientContext* context, const ::user::ScoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::user::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ListResponse>* AsyncListByScoreRaw(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::user::ListResponse>* PrepareAsyncListByScoreRaw(::grpc::ClientContext* context, const ::user::ListRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateUsuario_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateScore_;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_ListByScore_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateUsuario(::grpc::ServerContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response);
    virtual ::grpc::Status UpdateScore(::grpc::ServerContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response);
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response);
    virtual ::grpc::Status ListByScore(::grpc::ServerContext* context, const ::user::ListRequest* request, ::user::ListResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUsuario(::grpc::ServerContext* context, ::user::CreateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::CreateUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateScore() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateScore(::grpc::ServerContext* context, ::user::ScoreRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::ScoreResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::user::LoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::LoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListByScore() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListByScore(::grpc::ServerContext* context, ::user::ListRequest* request, ::grpc::ServerAsyncResponseWriter< ::user::ListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateUsuario<WithAsyncMethod_UpdateScore<WithAsyncMethod_Login<WithAsyncMethod_ListByScore<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::user::CreateUserRequest, ::user::CreateUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::CreateUserRequest* request, ::user::CreateUserResponse* response) { return this->CreateUsuario(context, request, response); }));}
    void SetMessageAllocatorFor_CreateUsuario(
        ::grpc::MessageAllocator< ::user::CreateUserRequest, ::user::CreateUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::CreateUserRequest, ::user::CreateUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUsuario(
      ::grpc::CallbackServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateScore() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::user::ScoreRequest, ::user::ScoreResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::ScoreRequest* request, ::user::ScoreResponse* response) { return this->UpdateScore(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateScore(
        ::grpc::MessageAllocator< ::user::ScoreRequest, ::user::ScoreResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::ScoreRequest, ::user::ScoreResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateScore(
      ::grpc::CallbackServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::user::LoginRequest, ::user::LoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::LoginRequest* request, ::user::LoginResponse* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::user::LoginRequest, ::user::LoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::LoginRequest, ::user::LoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListByScore() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::user::ListRequest, ::user::ListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::user::ListRequest* request, ::user::ListResponse* response) { return this->ListByScore(context, request, response); }));}
    void SetMessageAllocatorFor_ListByScore(
        ::grpc::MessageAllocator< ::user::ListRequest, ::user::ListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::user::ListRequest, ::user::ListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListByScore(
      ::grpc::CallbackServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateUsuario<WithCallbackMethod_UpdateScore<WithCallbackMethod_Login<WithCallbackMethod_ListByScore<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateScore() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListByScore() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUsuario(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateScore() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateScore(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListByScore() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListByScore(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateUsuario(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateUsuario(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateScore() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateScore(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateScore(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListByScore() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListByScore(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListByScore(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUsuario : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateUsuario() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::CreateUserRequest, ::user::CreateUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::CreateUserRequest, ::user::CreateUserResponse>* streamer) {
                       return this->StreamedCreateUsuario(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateUsuario() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUsuario(::grpc::ServerContext* /*context*/, const ::user::CreateUserRequest* /*request*/, ::user::CreateUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUsuario(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::CreateUserRequest,::user::CreateUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateScore() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::ScoreRequest, ::user::ScoreResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::ScoreRequest, ::user::ScoreResponse>* streamer) {
                       return this->StreamedUpdateScore(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateScore(::grpc::ServerContext* /*context*/, const ::user::ScoreRequest* /*request*/, ::user::ScoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateScore(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::ScoreRequest,::user::ScoreResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::LoginRequest, ::user::LoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::LoginRequest, ::user::LoginResponse>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::user::LoginRequest* /*request*/, ::user::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::LoginRequest,::user::LoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListByScore : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListByScore() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::user::ListRequest, ::user::ListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::user::ListRequest, ::user::ListResponse>* streamer) {
                       return this->StreamedListByScore(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListByScore() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListByScore(::grpc::ServerContext* /*context*/, const ::user::ListRequest* /*request*/, ::user::ListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListByScore(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::user::ListRequest,::user::ListResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateUsuario<WithStreamedUnaryMethod_UpdateScore<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_ListByScore<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateUsuario<WithStreamedUnaryMethod_UpdateScore<WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_ListByScore<Service > > > > StreamedService;
};

}  // namespace user


#endif  // GRPC_user_2eproto__INCLUDED
